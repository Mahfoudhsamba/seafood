# Generated by Django 5.2.7 on 2025-10-29 21:59

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('operations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de classification')),
                ('general_observation', models.TextField(blank=True, help_text='Remarques générales sur la classification du lot', verbose_name='Observation générale')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('validated', 'Validé'), ('cancelled', 'Annulé')], default='draft', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('arrival_note', models.ForeignKey(help_text='Sélectionner un lot dont le type de service est supérieur à 1003', on_delete=django.db.models.deletion.PROTECT, related_name='classifications', to='operations.arrivalnote', verbose_name="Lot (Note d'arrivée)")),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_classifications', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Rapport de classification',
                'verbose_name_plural': 'Rapports de classification',
                'ordering': ['-classification_date'],
            },
        ),
        migrations.CreateModel(
            name='ClassificationItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(choices=[('sardine', 'Sardine'), ('maquereau', 'Maquereau'), ('anchois', 'Anchois'), ('thon', 'Thon'), ('espadon', 'Espadon'), ('dorade', 'Dorade'), ('loup', 'Loup (Bar)'), ('crevette', 'Crevette'), ('calmar', 'Calmar'), ('poulpe', 'Poulpe'), ('rejete', 'Poisson rejeté'), ('perdu', 'Poids perdu'), ('autre', 'Autre espèce')], help_text='Type de poisson ou catégorie', max_length=100, verbose_name='Espèce')),
                ('custom_species_name', models.CharField(blank=True, help_text='Utilisé si "Autre espèce" est sélectionné', max_length=200, verbose_name="Nom personnalisé de l'espèce")),
                ('weight', models.DecimalField(decimal_places=2, help_text='Poids de cette espèce en kilogrammes', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Poids (kg)')),
                ('comment', models.TextField(blank=True, help_text='Remarques spécifiques sur cette espèce', verbose_name='Commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='operations.classification', verbose_name='Rapport de classification')),
            ],
            options={
                'verbose_name': 'Item de classification',
                'verbose_name_plural': 'Items de classification',
                'ordering': ['classification', 'species'],
            },
        ),
        migrations.AddIndex(
            model_name='classification',
            index=models.Index(fields=['arrival_note'], name='operations__arrival_29e521_idx'),
        ),
        migrations.AddIndex(
            model_name='classification',
            index=models.Index(fields=['classification_date'], name='operations__classif_0930be_idx'),
        ),
        migrations.AddIndex(
            model_name='classification',
            index=models.Index(fields=['status'], name='operations__status_d537ac_idx'),
        ),
        migrations.AddIndex(
            model_name='classificationitem',
            index=models.Index(fields=['classification'], name='operations__classif_78ab73_idx'),
        ),
        migrations.AddIndex(
            model_name='classificationitem',
            index=models.Index(fields=['species'], name='operations__species_bedab3_idx'),
        ),
    ]
