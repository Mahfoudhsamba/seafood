# Generated by Django 5.2.7 on 2025-10-21 08:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('seafood', '0005_alter_cashbox_folder_code_alter_cashbox_prefix_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='bankaccount',
            name='currency',
            field=models.CharField(choices=[('USD', 'US dollar (USD)'), ('EUR', 'Euro (EUR)'), ('JPY', 'Japanese yen (JPY)'), ('GBP', 'Pound sterling (GBP)'), ('AED', 'United Arab Emirates dirham (AED)'), ('AFN', 'Afghan afghani (AFN)'), ('ALL', 'Albanian lek (ALL)'), ('AMD', 'Armenian dram (AMD)'), ('ANG', 'Netherlands Antillean guilder (ANG)'), ('AOA', 'Angolan kwanza (AOA)'), ('ARS', 'Argentine peso (ARS)'), ('AUD', 'Australian dollar (AUD)'), ('AWG', 'Aruban florin (AWG)'), ('AZN', 'Azerbaijani manat (AZN)'), ('BAM', 'Bosnia and Herzegovina convertible mark (BAM)'), ('BBD', 'Barbadian dollar (BBD)'), ('BDT', 'Bangladeshi taka (BDT)'), ('BGN', 'Bulgarian lev (BGN)'), ('BHD', 'Bahraini dinar (BHD)'), ('BIF', 'Burundian franc (BIF)'), ('BMD', 'Bermudian dollar (BMD)'), ('BND', 'Brunei dollar (BND)'), ('BOB', 'Bolivian boliviano (BOB)'), ('BRL', 'Brazilian real (BRL)'), ('BSD', 'Bahamian dollar (BSD)'), ('BTN', 'Bhutanese ngultrum (BTN)'), ('BWP', 'Botswana pula (BWP)'), ('BYN', 'Belarusian ruble (BYN)'), ('BZD', 'Belize dollar (BZD)'), ('CAD', 'Canadian dollar (CAD)'), ('CDF', 'Congolese franc (CDF)'), ('CHF', 'Swiss franc (CHF)'), ('CLP', 'Chilean peso (CLP)'), ('CNY', 'Chinese yuan (CNY)'), ('COP', 'Colombian peso (COP)'), ('CRC', 'Costa Rican colón (CRC)'), ('CUC', 'Cuban convertible peso (CUC)'), ('CUP', 'Cuban peso (CUP)'), ('CVE', 'Cape Verdean escudo (CVE)'), ('CZK', 'Czech koruna (CZK)'), ('DJF', 'Djiboutian franc (DJF)'), ('DKK', 'Danish krone (DKK)'), ('DOP', 'Dominican peso (DOP)'), ('DZD', 'Algerian dinar (DZD)'), ('EGP', 'Egyptian pound (EGP)'), ('ERN', 'Eritrean nakfa (ERN)'), ('ETB', 'Ethiopian birr (ETB)'), ('EUR', 'EURO (EUR)'), ('FJD', 'Fijian dollar (FJD)'), ('FKP', 'Falkland Islands pound (FKP)'), ('GBP', 'British pound (GBP)'), ('GEL', 'Georgian lari (GEL)'), ('GGP', 'Guernsey pound (GGP)'), ('GHS', 'Ghanaian cedi (GHS)'), ('GIP', 'Gibraltar pound (GIP)'), ('GMD', 'Gambian dalasi (GMD)'), ('GNF', 'Guinean franc (GNF)'), ('GTQ', 'Guatemalan quetzal (GTQ)'), ('GYD', 'Guyanese dollar (GYD)'), ('HKD', 'Hong Kong dollar (HKD)'), ('HNL', 'Honduran lempira (HNL)'), ('HRK', 'Croatian kuna (HRK)'), ('HTG', 'Haitian gourde (HTG)'), ('HUF', 'Hungarian forint (HUF)'), ('IDR', 'Indonesian rupiah (IDR)'), ('ILS', 'Israeli new shekel (ILS)'), ('IMP', 'Manx pound (IMP)'), ('INR', 'Indian rupee (INR)'), ('IQD', 'Iraqi dinar (IQD)'), ('IRR', 'Iranian rial (IRR)'), ('ISK', 'Icelandic króna (ISK)'), ('JEP', 'Jersey pound (JEP)'), ('JMD', 'Jamaican dollar (JMD)'), ('JOD', 'Jordanian dinar (JOD)'), ('JPY', 'Japanese yen (JPY)'), ('KES', 'Kenyan shilling (KES)'), ('KGS', 'Kyrgyzstani som (KGS)'), ('KHR', 'Cambodian riel (KHR)'), ('KID', 'Kiribati dollar (KID)'), ('KMF', 'Comorian franc (KMF)'), ('KPW', 'North Korean won (KPW)'), ('KRW', 'South Korean won (KRW)'), ('KWD', 'Kuwaiti dinar (KWD)'), ('KYD', 'Cayman Islands dollar (KYD)'), ('KZT', 'Kazakhstani tenge (KZT)'), ('LAK', 'Lao kip (LAK)'), ('LBP', 'Lebanese pound (LBP)'), ('LKR', 'Sri Lankan rupee (LKR)'), ('LRD', 'Liberian dollar (LRD)'), ('LSL', 'Lesotho loti (LSL)'), ('LYD', 'Libyan dinar (LYD)'), ('MAD', 'Moroccan dirham (MAD)'), ('MDL', 'Moldovan leu (MDL)'), ('MGA', 'Malagasy ariary (MGA)'), ('MKD', 'Macedonian denar (MKD)'), ('MMK', 'Burmese kyat (MMK)'), ('MNT', 'Mongolian tögrög (MNT)'), ('MOP', 'Macanese pataca (MOP)'), ('MRU', 'Mauritanian ouguiya (MRU)'), ('MUR', 'Mauritian rupee (MUR)'), ('MVR', 'Maldivian rufiyaa (MVR)'), ('MWK', 'Malawian kwacha (MWK)'), ('MXN', 'Mexican peso (MXN)'), ('MYR', 'Malaysian ringgit (MYR)'), ('MZN', 'Mozambican metical (MZN)'), ('NAD', 'Namibian dollar (NAD)'), ('NGN', 'Nigerian naira (NGN)'), ('NIO', 'Nicaraguan córdoba (NIO)'), ('NOK', 'Norwegian krone (NOK)'), ('NPR', 'Nepalese rupee (NPR)'), ('NZD', 'New Zealand dollar (NZD)'), ('OMR', 'Omani rial (OMR)'), ('PAB', 'Panamanian balboa (PAB)'), ('PEN', 'Peruvian sol (PEN)'), ('PGK', 'Papua New Guinean kina (PGK)'), ('PHP', 'Philippine peso (PHP)'), ('PKR', 'Pakistani rupee (PKR)'), ('PLN', 'Polish złoty (PLN)'), ('PRB', 'Transnistrian ruble (PRB)'), ('PYG', 'Paraguayan guaraní (PYG)'), ('QAR', 'Qatari riyal (QAR)'), ('RON', 'Romanian leu (RON)'), ('RSD', 'Serbian dinar (RSD)'), ('RUB', 'Russian ruble (RUB)'), ('RWF', 'Rwandan franc (RWF)'), ('SAR', 'Saudi riyal (SAR)'), ('SEK', 'Swedish krona (SEK)'), ('SGD', 'Singapore dollar (SGD)'), ('SHP', 'Saint Helena pound (SHP)'), ('SLL', 'Sierra Leonean leone (SLL)'), ('SLS', 'Somaliland shilling (SLS)'), ('SOS', 'Somali shilling (SOS)'), ('SRD', 'Surinamese dollar (SRD)'), ('SSP', 'South Sudanese pound (SSP)'), ('STN', 'São Tomé and Príncipe dobra (STN)'), ('SYP', 'Syrian pound (SYP)'), ('SZL', 'Swazi lilangeni (SZL)'), ('THB', 'Thai baht (THB)'), ('TJS', 'Tajikistani somoni (TJS)'), ('TMT', 'Turkmenistan manat (TMT)'), ('TND', 'Tunisian dinar (TND)'), ('TOP', 'Tongan paʻanga (TOP)'), ('TRY', 'Turkish lira (TRY)'), ('TTD', 'Trinidad and Tobago dollar (TTD)'), ('TVD', 'Tuvaluan dollar (TVD)'), ('TWD', 'New Taiwan dollar (TWD)'), ('TZS', 'Tanzanian shilling (TZS)'), ('UAH', 'Ukrainian hryvnia (UAH)'), ('UGX', 'Ugandan shilling (UGX)'), ('UYU', 'Uruguayan peso (UYU)'), ('UZS', 'Uzbekistani soʻm (UZS)'), ('VES', 'Venezuelan bolívar soberano (VES)'), ('VND', 'Vietnamese đồng (VND)'), ('VUV', 'Vanuatu vatu (VUV)'), ('WST', 'Samoan tālā (WST)'), ('XAF', 'Central African CFA franc (XAF)'), ('XCD', 'Eastern Caribbean dollar (XCD)'), ('XOF', 'West African CFA franc (XOF)'), ('XPF', 'CFP franc (XPF)'), ('ZAR', 'South African rand (ZAR)'), ('ZMW', 'Zambian kwacha (ZMW)'), ('ZWB', 'Zimbabwean bonds (ZWB)')], default='MRU', max_length=3, verbose_name='Devise'),
        ),
        migrations.CreateModel(
            name='Prospect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('mobile', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Le numéro de portable doit être au format: '+999999999'. Jusqu'à 15 chiffres autorisés.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Portable')),
                ('position', models.CharField(max_length=100, verbose_name='Poste')),
                ('contact_source', models.CharField(choices=[('website', 'Site web'), ('social_media', 'Réseau social'), ('trade_show', 'Salon'), ('referral', 'Référence'), ('cold_call', 'Appel à froid'), ('email', 'Email'), ('other', 'Autre')], default='website', max_length=50, verbose_name='Source du contact')),
                ('status', models.CharField(choices=[('new', 'Nouveau'), ('contacted', 'Contacté'), ('qualified', 'Qualifié'), ('relaunched', 'Relancé'), ('converted', 'Converti'), ('lost', 'Perdu')], default='new', max_length=20, verbose_name='État du prospect')),
                ('company_name', models.CharField(max_length=200, verbose_name="Nom de l'entreprise")),
                ('policy_maker', models.CharField(blank=True, help_text="Nom du décideur dans l'entreprise", max_length=200, verbose_name='Décideur')),
                ('last_interaction', models.DateField(blank=True, null=True, verbose_name='Dernière interaction')),
                ('office_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Le numéro doit être au format: '+999999999'. Jusqu'à 15 chiffres autorisés.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Numéro de bureau')),
                ('email_contact', models.EmailField(blank=True, help_text="Email général de l'entreprise", max_length=254, verbose_name='Email de contact')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Site web')),
                ('zip_code', models.CharField(blank=True, max_length=20, verbose_name='Code postal')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('country', models.CharField(default='Mauritanie', max_length=100, verbose_name='Pays')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='X (Twitter)')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('acquisition_source', models.CharField(choices=[('website', 'Site web'), ('social_media', 'Réseau social'), ('trade_show', 'Salon'), ('referral', 'Référence'), ('cold_call', 'Appel à froid'), ('email', 'Email'), ('other', 'Autre')], default='website', max_length=50, verbose_name="Source d'acquisition")),
                ('trouble', models.TextField(blank=True, help_text='Problème ou besoin identifié du prospect', verbose_name='Problématique')),
                ('remark', models.TextField(blank=True, help_text='Notes supplémentaires sur le prospect', verbose_name='Remarque')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout du prospect")),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('next_followup', models.DateField(blank=True, null=True, verbose_name='Prochaine relance programmée')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Prospect',
                'verbose_name_plural': 'Prospects',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status'], name='seafood_pro_status_5834f5_idx'), models.Index(fields=['email'], name='seafood_pro_email_d1b89c_idx'), models.Index(fields=['next_followup'], name='seafood_pro_next_fo_9fd594_idx')],
            },
        ),
    ]
